{"version":3,"sources":["NotefulContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","find-functions.js","NotePageMain/NotePageMain.js","ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","NotefulError.js","App.js","index.js"],"names":["React","createContext","notes","folders","handleDeleteNote","addFolder","addNote","NoteListNav","this","context","className","map","folder","to","id","folder_name","Component","contextType","NotefulContext","NotePageNav","props","name","tag","role","onClick","history","goBack","defaultProps","Note","noteId","fetch","process","method","then","response","ok","json","error","data","onDeleteNote","catch","console","modified","date1","Date","toDateString","Consumer","type","deleteNote","NoteListMain","push","match","params","displayNotes","folderId","filter","note","folder_id","folderNotes","NotePageMain","targetNote","find","findNote","content","split","para","i","ValidationError","message","AddFolder","state","value","touched","setState","trim","length","folderName","headers","body","JSON","stringify","e","preventDefault","nameError","validateName","onSubmit","handleSubmit","htmlFor","onChange","updateName","target","disabled","AddNote","log","newNote","note_name","contentError","validateContent","updateContent","NotefulError","hasError","children","App","newNotes","newFolder","newFolders","api_url","Promise","all","Res1","Res2","reject","folders1","notes1","path","exact","component","contextValue","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46b1c02e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    notes: [],\r\n    folders: [],\r\n    handleDeleteNote: () => {},\r\n    addFolder: () => {},\r\n    addNote: () => {}\r\n})","import React, { Component } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport NotefulContext from '../NotefulContext';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass NoteListNav extends Component {\r\n    static contextType = NotefulContext;\r\n    render() {\r\n        const folders = this.context.folders\r\n        \r\n    return (\r\n        <div className='NoteListNav'>\r\n            <ul className='FolderList'>\r\n                {folders.map(folder =>\r\n                    <li key={folder.id}>\r\n                        <NavLink className='FolderLink'\r\n                            to={`/folder/${folder.id}`}>{folder.folder_name}</NavLink>\r\n                    </li>\r\n                    )}\r\n            </ul>\r\n            <Link to='/add-folder'><button className=\"add-folder\">Add Folder</button></Link><br></br>\r\n            <Link to='/add-note'><button className=\"note-add-button\">Add Note</button></Link>\r\n        </div>\r\n    )\r\n}}\r\n\r\nexport default NoteListNav;\r\n\r\nNoteListNav.propTypes = {\r\n    folders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string\r\n    }))\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNotePageNav.defaultProps = {\r\n    history: {\r\n        goBack:() => {}\r\n    }\r\n}\r\n\r\nfunction NotePageNav(props) {\r\n    return (\r\n        <div className='NotePageNav'>\r\n            \r\n            {props.folder && (\r\n                <h3 className=\"folder_name\">\r\n                    {props.folder.name}\r\n                </h3>\r\n            )}\r\n            <button tag='button' role='link' onClick={() => props.history.goBack()}>Go back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotePageNav;\r\n\r\nNotePageNav.propTypes = {\r\n    folders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string\r\n    }))\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NotefulContext from '../NotefulContext';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Note extends Component {\r\n\r\n    deleteNote(noteId, handleDeleteNote) {\r\n        const api_url = process.env.REACT_APP_API_URL\r\n        fetch(`${api_url}/notes/${noteId}`, {\r\n            method: `DELETE`\r\n        })\r\n        .then(response => {\r\n            if(!response.ok) {\r\n                return response.json().then(error => {\r\n                    throw error\r\n                })\r\n            }\r\n            return response\r\n        })\r\n        .then(data => {\r\n            handleDeleteNote(noteId);\r\n            this.props.onDeleteNote(noteId);\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n    }\r\n    render() {\r\n        const { name, id, modified } = this.props\r\n        const date1 = new Date(modified).toDateString();\r\n    return (\r\n        <NotefulContext.Consumer>\r\n            {(context) => (\r\n        <div className=\"Note\">\r\n            <h2><Link className=\"Note-name\" to={`/note/${id}`}>{name}</Link></h2>\r\n            <div className='Note-date'>\r\n                <div className='Note-date-modified'>\r\n                    Last Modified: {'  '} {date1}\r\n                </div>\r\n            </div>\r\n            <button className='Note_delete' type='button'\r\n                onClick={() => {\r\n                    this.deleteNote(id, context.handleDeleteNote);\r\n                }}\r\n            >Delete Note</button>\r\n        </div>\r\n        )}\r\n        </NotefulContext.Consumer>\r\n    \r\n    )\r\n}}\r\n\r\nexport default Note;\r\n\r\nNote.propTypes = {\r\n    id: PropTypes.number,\r\n    modified: PropTypes.string,\r\n    name: PropTypes.string,\r\n    history: PropTypes.object\r\n}","import React, {Component} from 'react';\r\nimport Note from '../Note/Note';\r\nimport NotefulContext from '../NotefulContext';\r\nimport { folderNotes } from '../find-functions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass NoteListMain extends Component {\r\n    static defaultProps = {\r\n        match: {\r\n            params: {}\r\n        }\r\n    }\r\n    static contextType = NotefulContext;\r\n\r\n    handleDeleteNote = noteId => {\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    render() {\r\n        const folder = this.props.match.params\r\n        const notes = this.context.notes\r\n        const displayNotes = folderNotes(notes, folder.folderId);\r\n    return (\r\n        <section className='NoteListMain'>\r\n            <ul>\r\n                {displayNotes.map(note =>\r\n                    <li key={note.id}>\r\n                        <Note\r\n                            id={note.id}\r\n                            name={note.name}\r\n                            modified={note.modified}\r\n                            onDeleteNote={this.handleDeleteNote}\r\n                        />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}}\r\n\r\nexport default NoteListMain;\r\n\r\nNoteListMain.propTypes = {\r\n    folder: PropTypes.object,\r\n    notes: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        modified: PropTypes.string,\r\n        folderId: PropTypes.string,\r\n        content: PropTypes.string\r\n    })),\r\n    displayNotes: PropTypes.func,\r\n    deleteNote: PropTypes.func\r\n}","export const findFolder = (folders, folderId) =>\r\n    // eslint-disable-next-line\r\n    folders.find(folder => folder.id == folderId)\r\n\r\nexport const findNote = (notes, noteId) =>\r\n    // eslint-disable-next-line\r\n    notes.find(note => note.id == noteId)\r\n\r\nexport const folderNotes = (notes, folderId) => (\r\n    // eslint-disable-next-line\r\n    (!folderId) ? notes : notes.filter(note => note.folder_id == folderId))\r\n\r\nexport const countNotesForFolder = (notes, folderId) =>\r\n    // eslint-disable-next-line\r\n    notes.filter(note => note.folderId == folderId).length","import React, { Component } from 'react';\r\nimport Note from '../Note/Note';\r\nimport NotefulContext from '../NotefulContext';\r\nimport { findNote } from '../find-functions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass NotePageMain extends Component {\r\n    static defaultProps = {\r\n        match: {\r\n            params: {}\r\n        }\r\n    }\r\n    static contextType = NotefulContext;\r\n\r\n    handleDeleteNote = noteId => {\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    render() {\r\n        const { notes } = this.context\r\n        const { noteId } = this.props.match.params\r\n        const targetNote = findNote(notes, noteId) || { content: '' }\r\n        \r\n    return (\r\n        <section className='NotePageMain'>\r\n            <Note\r\n                id={targetNote.id}\r\n                name={targetNote.name}\r\n                modified={targetNote.modified}\r\n                onDeleteNote={this.handleDeleteNote}\r\n            />\r\n            <div className='NotePageMain-Content'>\r\n                {targetNote.content.split(/\\n \\r|\\r/).map((para, i) =>\r\n                    <p key={i}>{para}</p>\r\n                )}\r\n            </div>\r\n        </section>\r\n    )\r\n}}\r\n\r\nexport default NotePageMain;\r\n\r\nNotePageMain.propTypes = {\r\n    notes: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        modified: PropTypes.string,\r\n        folderId: PropTypes.string,\r\n        content: PropTypes.string\r\n    })),\r\n    noteId: PropTypes.object,\r\n    onDeleteNote: PropTypes.func\r\n}","import React from 'react';\r\n\r\nfunction ValidationError(props) {\r\n    if (props.message) {\r\n        return (\r\n            <div className=\"error\">{props.message}</div>\r\n        );\r\n    }\r\n    return <></>\r\n}\r\n\r\nexport default ValidationError;","import React, { Component } from 'react';\r\nimport ValidationError from '../ValidationError';\r\nimport NotefulContext from '../NotefulContext';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFolder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: '',\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n    static contextType = NotefulContext;\r\n\r\n    updateName(name) {\r\n        this.setState({name: { value: name, touched: true}})\r\n    }\r\n\r\n    validateName() {\r\n        const name = this.state.name.value.trim();\r\n        if (name.length === 0) {\r\n            return \"Name is required\";\r\n        } else if (name.length > 12) {\r\n            return \"Name must be under 13 characters\"\r\n        }\r\n    }\r\n\r\n    addFolder(folderName, addFolder) {\r\n        const api_url = process.env.REACT_APP_API_URL\r\n        fetch(`${api_url}/folders`, {\r\n            method: `POST`,\r\n            headers: { 'Content-type': 'application/json'},\r\n            body: JSON.stringify({ folder_name: `${folderName}`})\r\n        })\r\n        .then(response => {\r\n            if(!response.ok) {\r\n                return response.json().then(error => {\r\n                    throw error\r\n                })\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            addFolder(data)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n    } \r\n\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const folderName = this.state.name.value;\r\n        this.addFolder(folderName, this.context.addFolder)\r\n    }\r\n\r\n    render() {\r\n        const nameError = this.validateName();\r\n        return(\r\n            <form className=\"new-folder\" onSubmit={e => this.handleSubmit(e)}>\r\n                <h2>Add New Folder</h2>\r\n                <div className=\"folder-hint\"></div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"folder-name\">Folder Name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"folder-control\"\r\n                        name=\"folder-name\"\r\n                        id=\"folder-name\"\r\n                        onChange={e => this.updateName(e.target.value)}/>\r\n                        {this.state.name.touched && ( <ValidationError message={nameError} />)}\r\n                    <button type=\"reset\">Reset</button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"folder-submit\"\r\n                        disabled={this.validateName()}\r\n                    >Submit</button>\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFolder;\r\n\r\nAddFolder.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    touched: PropTypes.bool,\r\n    addFolder: PropTypes.func,\r\n}","import React, { Component } from 'react';\r\nimport NotefulContext from '../NotefulContext';\r\nimport ValidationError from '../ValidationError'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            content: {\r\n                value: '',\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n    addNote(note, addNote) {\r\n        const api_url = process.env.REACT_APP_API_URL\r\n        fetch(`${api_url}/notes`, {\r\n            method: `POST`,\r\n            headers: { 'Content-type': 'application/json'},\r\n            body: JSON.stringify( note )\r\n        })\r\n        .then(response => {\r\n            if(!response.ok) {\r\n                return response.json().then(error => {\r\n                    throw error\r\n                })\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            console.log(data)\r\n            addNote(data)\r\n            this.props.history.push(`./folder/${data.folder_id}`)\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n        })\r\n    } \r\n\r\n    updateName(name) {\r\n        this.setState({ name: { value: name, touched: true}})\r\n    }\r\n\r\n    updateContent(content) {\r\n        this.setState({ content: { value: content, touched: true}})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const newNote = {\r\n            note_name: e.target['name'].value,\r\n            content: e.target['content'].value,\r\n            folder_id: e.target['folders'].value,\r\n            modified: new Date()\r\n        }\r\n        this.addNote(newNote, this.context.addNote)\r\n    }\r\n\r\n    validateName() {\r\n        const name = this.state.name.value.trim();\r\n        if (name.length === 0) {\r\n            return \"Name is required\";\r\n        } \r\n    }\r\n\r\n    validateContent() {\r\n        const content = this.state.content.value.trim();\r\n        if (content.length === 0) {\r\n            return \"Content is required\";\r\n        }\r\n    }\r\n\r\n    static contextType = NotefulContext\r\n\r\n    render() {\r\n        const nameError = this.validateName();\r\n        const contentError = this.validateContent();\r\n        const folders = this.context.folders;\r\n        return (\r\n            <form className=\"add-note\" onSubmit={e => this.handleSubmit(e)}>\r\n                <h2>Add Note</h2>\r\n                <div className='addnote-hint'></div>\r\n                <div className=\"form group\">\r\n                    <label htmlFor=\"name\">Name: </label>\r\n                    <input type=\"text\" name=\"name\" onChange={e => this.updateName(e.target.value)}></input>\r\n                    {this.state.name.touched && ( <ValidationError message={nameError} />)}<br/>\r\n                    <label htmlFor=\"content\">Content: </label>\r\n                    <input className=\"note-content\" type=\"text\" name=\"content\" onChange={e => this.updateContent(e.target.value)}></input>\r\n                    {this.state.content.touched && ( <ValidationError message={contentError} />)}<br/>\r\n                    <label htmlFor=\"folders\">Select A folder: </label>\r\n                    <select\r\n                        name=\"folders\"\r\n                        id=\"folders\"\r\n                    >{folders.map(folder => (\r\n                        <option key={folder.id} name={folder.id} value={folder.id}>{folder.folder_name}</option>))}\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" disabled={this.validateContent() || this.validateName()}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNote;\r\n\r\nAddNote.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    touched: PropTypes.bool,\r\n    addNote: PropTypes.func,\r\n    folders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string\r\n    }))\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NotefulError extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        };\r\n    }\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return(\r\n                <h2>Could not display this content at this time, please try again later.</h2>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default NotefulError;\r\n\r\nNotefulError.propTypes = {\r\n    hasError: PropTypes.bool\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport NoteListNav from './NoteListNav/NoteListNav';\r\nimport NotePageNav from './NotePageNav/NotePageNav';\r\nimport NoteListMain from './NoteListMain/NoteListMain';\r\nimport NotePageMain from './NotePageMain/NotePageMain';\r\nimport NotefulContext from './NotefulContext';\r\nimport AddFolder from './AddFolder/AddFolder';\r\nimport AddNote from './AddNote/AddNote'; \r\nimport NotefulError from './NotefulError';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    notes: [],\r\n    folders: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const api_url = process.env.REACT_APP_API_URL\r\n    Promise.all([\r\n      fetch(`${api_url}/folders`),\r\n      fetch(`${api_url}/notes`)\r\n  ])\r\n    .then(([Res1, Res2]) => {\r\n      if (!Res1.ok)\r\n        return Res1.json().then(e => Promise.reject(e))\r\n      if (!Res2.ok)\r\n        return Res2.json().then(e => Promise.reject(e));\r\n      return Promise.all([Res1.json(), Res2.json()]);\r\n    })\r\n    .then(([folders1, notes1]) => this.setState({\r\n      folders: folders1, \r\n      notes: notes1}))\r\n    \r\n  };\r\n\r\n  handleDeleteNote = noteId => {\r\n    const newNotes = this.state.notes.filter(note =>\r\n      note.id !== noteId\r\n      )\r\n    this.setState({\r\n      notes: newNotes\r\n    })\r\n  }\r\n\r\n  addFolder = newFolder => {\r\n    const newFolders = this.state.folders\r\n    newFolders.push(newFolder)\r\n    this.setState({\r\n      folders: newFolders\r\n    })\r\n  }\r\n\r\n  addNote = newNote => {\r\n    const newNotes = this.state.notes\r\n    newNotes.push(newNote)\r\n    this.setState({\r\n      notes: newNotes\r\n    })\r\n  }\r\n\r\n  renderNavRoutes() {\r\n    return (\r\n      <>\r\n      <NotefulError>\r\n          {['/', '/folder/:folderId', '/add-folder', '/add-note'].map(path => (\r\n              <Route\r\n                  exact\r\n                  key={path}\r\n                  path={path}\r\n                  component={NoteListNav}\r\n              />\r\n          ))}\r\n          <Route\r\n              path=\"/note/:noteId\"\r\n              component={NotePageNav}\r\n          />\r\n          </NotefulError>\r\n        </>\r\n    )\r\n  }\r\n\r\n  renderMainRoutes() {\r\n    return (\r\n        <>\r\n        <NotefulError>\r\n            {['/', '/folder/:folderId'].map(path => (\r\n                <Route\r\n                    exact\r\n                    key={path}\r\n                    path={path}\r\n                    component={NoteListMain}\r\n                />\r\n            ))}\r\n            <Route\r\n                path=\"/note/:noteId\"\r\n                component={NotePageMain}\r\n            />\r\n            <Route path=\"/add-folder\" component={AddFolder} />\r\n            <Route path=\"/add-note\" component={AddNote} />\r\n            </NotefulError>\r\n        </>\r\n    );\r\n}\r\n\r\n  render () {\r\n    const contextValue = {\r\n      folders: this.state.folders,\r\n      notes: this.state.notes,\r\n      handleDeleteNote: this.handleDeleteNote,\r\n      addFolder: this.addFolder,\r\n      addNote: this.addNote\r\n    }\r\n\r\n  return (\r\n    <NotefulContext.Provider value={contextValue}>\r\n    <div className=\"App\">\r\n      <nav className='App-nav'>{this.renderNavRoutes()}</nav>\r\n      <header className=\"App-header\">\r\n        <h1><Link to=\"/\">Noteful</Link></h1>\r\n      </header>\r\n      <main className='App-main'>{this.renderMainRoutes()}</main>\r\n    </div>\r\n    </NotefulContext.Provider>\r\n  );\r\n}}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}